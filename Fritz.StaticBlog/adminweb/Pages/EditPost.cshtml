@page "{articleTitle?}"
@model Fritz.StaticBlog.adminweb.Pages.EditPostModel

<div class="row vh-100">
	<div class="col-md-6">

		<textarea id="editor"></textarea>

		<fieldset class="form-group">
			<legend>Frontmatter for the post</legend>
			<label for="Title">Title</label>
			<input type="text" class="form-control" id="Title" placeholder="Enter Title" value="@Model.Frontmatter?.Title" onchange="LiveReload()">
			<label for="Author">Author</label>
			<input type="text" class="form-control" id="Author" placeholder="Enter Author" value="@Model.Frontmatter?.Author" onchange="LiveReload()">
			<label for="Title">Publish Date</label>
			<input type="datetime-local" class="form-control " id="PublishDate" placeholder="Enter PublishDate" value="@Model.Frontmatter?.PublishDate.ToString("yyyy-MM-ddTHH:mm")" onchange="LiveReload()">
			
			<div class="form-check">
				<label class="form-check-label" for="Title">Is Draft?</label>
				<input class="form-check-input" type="checkbox" id="Draft" @if (Model.Frontmatter?.Draft ?? true)
				{
					<text>checked=""</text>
				}>
			</div>

			<label for="Description">Abstract / Description:</label>
			<input type="text" class="form-control" id="Description" value="@Model.Frontmatter?.Description" placeholder="Enter Abstract / Description">

		</fieldset>

	</div>
	<iframe class="col-md-6" id="previewFrame">
	</iframe>
</div>


@section head {
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css">
}

@section scripts {
	<script src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js"></script>
	<script>
		var simplemde = new SimpleMDE({ 
			element: document.getElementById("editor"),
			hideIcons: ["preview", "side-by-side", "fullscreen", "guide"],
			toolbar: ["bold", "italic", "heading", "|", "quote", "unordered-list", "ordered-list", "|", "link", "table", "horizontal-rule", "|", 
			{
					name: "save",
					action: function save(editor) {

						// TODO: Validate frontmatter

						let formData = new FormData();
						formData.append('post', FormatFrontmatter() + simplemde.value());
						fetch("http://localhost:8029/savepost", {
							method: 'POST',
							body: formData
						}).then(response => {
							// if successful, redirect to the Posts page
							if (response.ok) {
								window.location.href = "http://localhost:8028/posts";
							}
						})
					},
					className: "fa fa-floppy-o",
					title: "Save",
			}],
		});

		@if (!string.IsNullOrEmpty(Model.Markdown))
		{
			<text>simplemde.value(`@Html.Raw(Model.Markdown)`);</text>
		}

		// More features available at:  https://github.com/sparksuite/simplemde-markdown-editor
		var changeThrottle;
		simplemde.codemirror.on("change", LiveReload);

		function LiveReload() {

			clearTimeout(changeThrottle);
			changeThrottle = window.setTimeout(x => {
				let formData = new FormData();
				formData.append('post', FormatFrontmatter() + simplemde.value());
				fetch("http://localhost:8029/previewpost", {
					method: 'POST',
					body: formData
				}).then(response => response.text())
					.then(text => {

						var doc = document.getElementById('previewFrame').contentWindow.document;
						doc.open();
						doc.write(text);
						doc.close();

					});
			}, 300);

		}

		function FormatFrontmatter() {
			return `---
title: "${document.getElementById('Title').value}"
author: ${document.getElementById('Author').value}
publishdate: ${document.getElementById('PublishDate').value}
draft: ${document.getElementById('Draft').checked}
description: "${document.getElementById('Description').value}"
---
`;
		}
	</script>
}